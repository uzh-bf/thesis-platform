stages:
- test
- build
- deploy

sast:
  stage: test

include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml

# variables:
#   DOCKER_TLS_CERTDIR: "/certs"

build-dev:
  image: docker:20.10.16
  stage: build
  services:
    - docker:20.10.16-dind
  before_script:
    - docker info
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build . -t $CI_REGISTRY_IMAGE:latest
      --cache-from $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE
  only:
    - dev

build-stable:
  image: docker:20.10.16
  stage: build
  services:
    - docker:20.10.16-dind
  before_script:
    - docker info
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build . -t $CI_REGISTRY_IMAGE:stable
      --cache-from $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:stable
  only:
    - main

deploy-dev:
  stage: deploy
  image: registry.gitlab.com/static-web-apps/azure-static-web-apps-deploy
  script:
    - echo "App deployed successfully."
  variables:
    API_TOKEN: f5c5d675c404b72649e01305d91ee398964e7307fcdadeac28a5d54233c664a43-798dca5f-0ded-4f00-ba3d-0e28e961690b003227035
    APP_PATH: $CI_PROJECT_DIR
  environment:
    name: dev
  only:
    - dev

# deploy-prod:
#   stage: deploy
#   image: registry.gitlab.com/static-web-apps/azure-static-web-apps-deploy
#   script:
#     - echo "App deployed successfully."
#   variables:
#     API_TOKEN: abcd
#     APP_PATH: $CI_PROJECT_DIR
#   environment:
#     name: prod
#   only:
#     - master
